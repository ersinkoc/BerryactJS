import{effect,signal}from './signal-enhanced.js';const portals=new Map();let portalId=0;export function createPortal(content,target,options={}){const id=++portalId;const{key=`portal_${id}`,prepend=false,className=null,onMount=null,onUnmount=null}=options;const targetElement=typeof target==='string' ? document.querySelector(target): target;if(!targetElement){throw new Error(`Portal target not found: ${target}`);}const container=document.createElement('div');container.setAttribute('data-berryact-portal',key);if(className){container.className=className;}const portal={id,key,content,target: targetElement,container,instance: null,active: signal(true),mounted: false};function mount(){if(portal.mounted)return;if(prepend && targetElement.firstChild){targetElement.insertBefore(container,targetElement.firstChild);}else{targetElement.appendChild(container);}portal.instance=render(content,container);portal.mounted=true;if(onMount){onMount(portal);}portals.set(key,portal);}function unmountPortal(){if(!portal.mounted)return;if(portal.instance){unmount(portal.instance);}if(container.parentNode){container.parentNode.removeChild(container);}portal.mounted=false;if(onUnmount){onUnmount(portal);}portals.delete(key);}function update(newContent){if(!portal.mounted)return;portal.content=newContent;if(portal.instance){unmount(portal.instance);}portal.instance=render(newContent,container);}effect(()=>{if(portal.active.value && !portal.mounted){mount();}else if(!portal.active.value && portal.mounted){unmountPortal();}});if(portal.active.value){mount();}return{mount,unmount: unmountPortal,update,activate:()=> portal.active.value=true,deactivate:()=> portal.active.value=false,isActive:()=> portal.active.value,isMounted:()=> portal.mounted,getContainer:()=> container,getTarget:()=> targetElement,dispose:()=>{unmountPortal();portal.active.dispose();}};}export function Portal({to,children,...options}){const portal=createPortal(()=> children,to,options);return{_portal: portal,dispose:()=> portal.dispose()};}export function getPortal(key){return portals.get(key);}export function getAllPortals(){return Array.from(portals.values());}export function closePortal(key){const portal=portals.get(key);if(portal){portal.unmount();}}export function closeAllPortals(){portals.forEach(portal=> portal.unmount());}export const PortalTargets={BODY: document.body,HEAD: document.head,ROOT: '#root',MODAL: '#modal-root',TOOLTIP: '#tooltip-root',DROPDOWN: '#dropdown-root'};export function createModal(content,options={}){const{className='berryact-modal',backdrop=true,closeOnBackdrop=true,closeOnEscape=true,onClose=null,...portalOptions}=options;let portal;let backdropElement;if(backdrop){backdropElement=document.createElement('div');backdropElement.className='berryact-modal-backdrop';backdropElement.style.cssText=` position: fixed;top: 0;left: 0;right: 0;bottom: 0;background: rgba(0,0,0,0.5);z-index: 9998;`;if(closeOnBackdrop){backdropElement.addEventListener('click',(e)=>{if(e.target===backdropElement){close();}});}document.body.appendChild(backdropElement);}const modalWrapper=()=>{return{render:()=>{const modalElement=document.createElement('div');modalElement.className='berryact-modal-content';modalElement.style.cssText=` position: fixed;top: 50%;left: 50%;transform: translate(-50%,-50%);background: white;z-index: 9999;max-width: 90vw;max-height: 90vh;overflow: auto;`;render(content,modalElement);return modalElement;}};};portal=createPortal(modalWrapper,document.body,{className,...portalOptions});function handleEscape(e){if(e.key==='Escape' && closeOnEscape){close();}}if(closeOnEscape){document.addEventListener('keydown',handleEscape);}function close(){if(onClose){onClose();}portal.dispose();if(backdropElement && backdropElement.parentNode){backdropElement.parentNode.removeChild(backdropElement);}if(closeOnEscape){document.removeEventListener('keydown',handleEscape);}}return{portal,close,update:(newContent)=> portal.update(()=> modalWrapper(newContent))};}export function createTooltip(content,anchor,options={}){const{position='top',offset=8,className='berryact-tooltip',delay=0,...portalOptions}=options;let portal;let timeoutId;function calculatePosition(){const rect=anchor.getBoundingClientRect();const positions={top:{left: rect.left+rect.width/2,top: rect.top-offset,transform: 'translate(-50%,-100%)'},bottom:{left: rect.left+rect.width/2,top: rect.bottom+offset,transform: 'translate(-50%,0)'},left:{left: rect.left-offset,top: rect.top+rect.height/2,transform: 'translate(-100%,-50%)'},right:{left: rect.right+offset,top: rect.top+rect.height/2,transform: 'translate(0,-50%)'}};return positions[position]|| positions.top;}function show(){if(portal)return;timeoutId=setTimeout(()=>{const tooltipWrapper=()=>{const pos=calculatePosition();return{render:()=>{const tooltipElement=document.createElement('div');tooltipElement.className='berryact-tooltip-content';tooltipElement.style.cssText=` position: fixed;left: ${pos.left}px;top: ${pos.top}px;transform: ${pos.transform};z-index: 10000;pointer-events: none;`;render(content,tooltipElement);return tooltipElement;}};};portal=createPortal(tooltipWrapper,document.body,{className,...portalOptions});},delay);}function hide(){if(timeoutId){clearTimeout(timeoutId);}if(portal){portal.dispose();portal=null;}}function update(newContent){content=newContent;if(portal){portal.update(()=> tooltipWrapper(newContent));}}anchor.addEventListener('mouseenter',show);anchor.addEventListener('mouseleave',hide);anchor.addEventListener('focus',show);anchor.addEventListener('blur',hide);return{show,hide,update,dispose:()=>{hide();anchor.removeEventListener('mouseenter',show);anchor.removeEventListener('mouseleave',hide);anchor.removeEventListener('focus',show);anchor.removeEventListener('blur',hide);}};}