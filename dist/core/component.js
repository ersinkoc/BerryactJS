import{signal,effect,batch}from './signal.js';import{scheduleComponentUpdate}from './scheduler.js';import{cleanupComponentEffects}from './hooks.js';import{isVNode,Fragment}from './vdom.js';let currentComponent=null;let hookIndex=0;function vNodeToDOM(vnode){if(!vnode)return null;if(typeof vnode==='string' || typeof vnode==='number'){return document.createTextNode(String(vnode));}if(vnode && typeof vnode==='object' && vnode.value !==undefined && typeof vnode.peek==='function'){return document.createTextNode(String(vnode.value));}if(vnode===null || vnode===undefined || typeof vnode==='boolean'){return document.createTextNode('');}if(Array.isArray(vnode)){const fragment=document.createDocumentFragment();vnode.forEach(child=>{const childDOM=vNodeToDOM(child);if(childDOM)fragment.appendChild(childDOM);});return fragment;}if(isVNode(vnode)){if(vnode.type==='#text'){const nodeValue=vnode.props.nodeValue;if(nodeValue && typeof nodeValue==='object' && nodeValue.value !==undefined && typeof nodeValue.peek==='function'){return document.createTextNode(String(nodeValue.value));}return document.createTextNode(String(nodeValue || ''));}if(vnode.type===Fragment){const fragment=document.createDocumentFragment();if(vnode.children){vnode.children.forEach(child=>{const childDOM=vNodeToDOM(child);if(childDOM)fragment.appendChild(childDOM);});}return fragment;}if(typeof vnode.type==='function'){let instance;if(vnode.type.prototype && vnode.type.prototype.render){instance=new vnode.type(vnode.props);}else{const ComponentClass=vnode.type;instance=new ComponentClass(vnode.props);}const prevComponent=currentComponent;const prevHookIndex=hookIndex;currentComponent=instance;hookIndex=0;try{const childVNode=instance.render();const childDOM=vNodeToDOM(childVNode);return childDOM;}finally{currentComponent=prevComponent;hookIndex=prevHookIndex;}}if(typeof vnode.type==='string'){const element=document.createElement(vnode.type);if(vnode.props){Object.entries(vnode.props).forEach(([key,value])=>{if(key==='className'){element.className=value;}else if(key==='style' && typeof value==='object'){Object.assign(element.style,value);}else if(key.startsWith('on')&& typeof value==='function'){const eventName=key.slice(2).toLowerCase();element.addEventListener(eventName,value);}else if(key !=='children'){element.setAttribute(key,value);}});}if(vnode.children){vnode.children.forEach(child=>{const childDOM=vNodeToDOM(child);if(childDOM)element.appendChild(childDOM);});}return element;}}return document.createTextNode(String(vnode));}export class Component{constructor(props={}){this.props=signal(props);this.hooks=[];this.effects=[];this.isMounted=false;this.element=null;this.children=[];this.parent=null;this.key=props.key;}render(){throw new Error('Component must implement render method');}unmount(){this.isMounted=false;if(this.renderEffect){this.renderEffect.dispose();this.renderEffect=null;}cleanupComponentEffects(this);this.effects.forEach(effect=> effect.dispose());this.effects.length=0;this.hooks.length=0;if(this.element && this.element.parentNode){this.element.parentNode.removeChild(this.element);}this.children.forEach(child=>{if(child.unmount)child.unmount();});}update(){if(!this.isMounted)return;const prevComponent=currentComponent;const prevHookIndex=hookIndex;currentComponent=this;hookIndex=0;try{const vnode=this.render();const newElement=vNodeToDOM(vnode);if(this.fragmentNodes){this.fragmentNodes.forEach(node=>{if(node.parentNode){node.parentNode.removeChild(node);}});this.fragmentNodes=null;}if(this.element && this.element.parentNode && this.element.nodeType !==Node.DOCUMENT_FRAGMENT_NODE){this.element.parentNode.replaceChild(newElement,this.element);}else if(this.container && newElement){if(newElement.nodeType===Node.DOCUMENT_FRAGMENT_NODE){this.fragmentNodes=Array.from(newElement.childNodes);this.container.appendChild(newElement);}else{this.container.appendChild(newElement);}}this.element=newElement;}finally{currentComponent=prevComponent;hookIndex=prevHookIndex;}}mount(container){this.isMounted=true;this.container=container;this.renderEffect=effect(()=>{this.update();});if(container && this.element){if(this.element.nodeType===Node.DOCUMENT_FRAGMENT_NODE){this.fragmentNodes=Array.from(this.element.childNodes);container.appendChild(this.element);}else{container.appendChild(this.element);}}}shouldUpdate(){return this.isMounted;}setProps(newProps){batch(()=>{this.props.value={...this.props.value,...newProps};});}}export function defineComponent(renderFn){return class extends Component{render(){return renderFn(this.props.value);}};}export function createComponent(renderFn,props={}){const ComponentClass=defineComponent(renderFn);return new ComponentClass(props);}export function getCurrentComponent(){return currentComponent;}