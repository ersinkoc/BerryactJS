// Berryact JS Framework - Core Bundle
// Single file containing essential functionality
// Generated: 2025-07-16T14:11:57.471Z

(function(global) {
'use strict';


// === core/signal.js ===
let currentEffect=null;let batchDepth=0;let batchedEffects=new Set();function signal(initialValue){const observers=new Set();let value=initialValue;let version=0;const signalObject={get value(){if(currentEffect){observers.add(currentEffect);currentEffect.dependencies.add(signalObject);}return value;},set value(newValue){if(value !==newValue){value=newValue;version++;notify();}},get version(){return version;},peek(){return value;},notify(){notify();},dispose(){observers.clear();}};function notify(){if(batchDepth > 0){observers.forEach(observer=> batchedEffects.add(observer));}else{observers.forEach(observer=>{if(observer.active){observer.execute();}});}}return signalObject;}function computed(fn){let cachedValue;let isValid=false;const dependencies=new Set();const observers=new Set();const effectObject={dependencies,active: true,execute:()=>{isValid=false;notify();}};function recompute(){const prevEffect=currentEffect;currentEffect=effectObject;dependencies.forEach(dep=>{if(dep.observers){dep.observers.delete(effectObject);}});dependencies.clear();try{cachedValue=fn();isValid=true;}finally{currentEffect=prevEffect;}return cachedValue;}function notify(){if(batchDepth > 0){observers.forEach(observer=> batchedEffects.add(observer));}else{observers.forEach(observer=>{if(observer.active){observer.execute();}});}}const computedSignal={get value(){if(currentEffect){observers.add(currentEffect);currentEffect.dependencies.add(computedSignal);}if(!isValid){recompute();}return cachedValue;},set value(newValue){throw new Error('Cannot set computed signal');},get version(){return 0;},peek(){return cachedValue;},notify(){notify();},dispose(){effectObject.active=false;dependencies.forEach(dep=>{if(dep.observers){dep.observers.delete(effectObject);}});dependencies.clear();observers.clear();}};recompute();return computedSignal;}function effect(fn,options={}){const{immediate=true}=options;const dependencies=new Set();let isActive=true;let cleanup=null;const effectObject={dependencies,active: isActive,execute(){if(!isActive)return;if(cleanup){cleanup();cleanup=null;}const prevEffect=currentEffect;currentEffect=effectObject;dependencies.forEach(dep=>{if(dep.observers){dep.observers.delete(effectObject);}});dependencies.clear();try{const result=fn();if(typeof result==='function'){cleanup=result;}}finally{currentEffect=prevEffect;}},dispose(){isActive=false;if(cleanup){cleanup();cleanup=null;}dependencies.forEach(dep=>{if(dep.observers){dep.observers.delete(effectObject);}});dependencies.clear();}};if(immediate){effectObject.execute();}return effectObject;}function batch(fn){if(batchDepth===0){batchedEffects.clear();}batchDepth++;try{const result=fn();if(batchDepth===1){batchedEffects.forEach(effect=>{if(effect.active){effect.execute();}});batchedEffects.clear();}return result;}finally{batchDepth--;}}function untrack(fn){const prevEffect=currentEffect;currentEffect=null;try{return fn();}finally{currentEffect=prevEffect;}}function isSignal(value){return value && typeof value==='object' && 'value' in value && 'peek' in value;}
// === core/component.js ===
let currentComponent=null;let hookIndex=0;function vNodeToDOM(vnode){if(!vnode)return null;if(typeof vnode==='string' || typeof vnode==='number'){return document.createTextNode(String(vnode));}if(vnode && typeof vnode==='object' && vnode.value !==undefined && typeof vnode.peek==='function'){return document.createTextNode(String(vnode.value));}if(vnode===null || vnode===undefined || typeof vnode==='boolean'){return document.createTextNode('');}if(Array.isArray(vnode)){const fragment=document.createDocumentFragment();vnode.forEach(child=>{const childDOM=vNodeToDOM(child);if(childDOM)fragment.appendChild(childDOM);});return fragment;}if(isVNode(vnode)){if(vnode.type==='#text'){const nodeValue=vnode.props.nodeValue;if(nodeValue && typeof nodeValue==='object' && nodeValue.value !==undefined && typeof nodeValue.peek==='function'){return document.createTextNode(String(nodeValue.value));}return document.createTextNode(String(nodeValue || ''));}if(vnode.type===Fragment){const fragment=document.createDocumentFragment();if(vnode.children){vnode.children.forEach(child=>{const childDOM=vNodeToDOM(child);if(childDOM)fragment.appendChild(childDOM);});}return fragment;}if(typeof vnode.type==='function'){let instance;if(vnode.type.prototype && vnode.type.prototype.render){instance=new vnode.type(vnode.props);}else{const ComponentClass=vnode.type;instance=new ComponentClass(vnode.props);}const prevComponent=currentComponent;const prevHookIndex=hookIndex;currentComponent=instance;hookIndex=0;try{const childVNode=instance.render();const childDOM=vNodeToDOM(childVNode);return childDOM;}finally{currentComponent=prevComponent;hookIndex=prevHookIndex;}}if(typeof vnode.type==='string'){const element=document.createElement(vnode.type);if(vnode.props){Object.entries(vnode.props).forEach(([key,value])=>{if(key==='className'){element.className=value;}else if(key==='style' && typeof value==='object'){Object.assign(element.style,value);}else if(key.startsWith('on')&& typeof value==='function'){const eventName=key.slice(2).toLowerCase();element.addEventListener(eventName,value);}else if(key !=='children'){element.setAttribute(key,value);}});}if(vnode.children){vnode.children.forEach(child=>{const childDOM=vNodeToDOM(child);if(childDOM)element.appendChild(childDOM);});}return element;}}return document.createTextNode(String(vnode));}class Component{constructor(props={}){this.props=signal(props);this.hooks=[];this.effects=[];this.isMounted=false;this.element=null;this.children=[];this.parent=null;this.key=props.key;}render(){throw new Error('Component must implement render method');}unmount(){this.isMounted=false;if(this.renderEffect){this.renderEffect.dispose();this.renderEffect=null;}cleanupComponentEffects(this);this.effects.forEach(effect=> effect.dispose());this.effects.length=0;this.hooks.length=0;if(this.element && this.element.parentNode){this.element.parentNode.removeChild(this.element);}this.children.forEach(child=>{if(child.unmount)child.unmount();});}update(){if(!this.isMounted)return;const prevComponent=currentComponent;const prevHookIndex=hookIndex;currentComponent=this;hookIndex=0;try{const vnode=this.render();const newElement=vNodeToDOM(vnode);if(this.fragmentNodes){this.fragmentNodes.forEach(node=>{if(node.parentNode){node.parentNode.removeChild(node);}});this.fragmentNodes=null;}if(this.element && this.element.parentNode && this.element.nodeType !==Node.DOCUMENT_FRAGMENT_NODE){this.element.parentNode.replaceChild(newElement,this.element);}else if(this.container && newElement){if(newElement.nodeType===Node.DOCUMENT_FRAGMENT_NODE){this.fragmentNodes=Array.from(newElement.childNodes);this.container.appendChild(newElement);}else{this.container.appendChild(newElement);}}this.element=newElement;}finally{currentComponent=prevComponent;hookIndex=prevHookIndex;}}mount(container){this.isMounted=true;this.container=container;this.renderEffect=effect(()=>{this.update();});if(container && this.element){if(this.element.nodeType===Node.DOCUMENT_FRAGMENT_NODE){this.fragmentNodes=Array.from(this.element.childNodes);container.appendChild(this.element);}else{container.appendChild(this.element);}}}shouldUpdate(){return this.isMounted;}setProps(newProps){batch(()=>{this.props.value={...this.props.value,...newProps};});}}function defineComponent(renderFn){return class extends Component{render(){return renderFn(this.props.value);}};}function createComponent(renderFn,props={}){const ComponentClass=defineComponent(renderFn);return new ComponentClass(props);}function getCurrentComponent(){return currentComponent;}
// === core/hooks.js ===
let currentComponent=null;let hookIndex=0;function getCurrentComponent(){if(!currentComponent){throw new Error('Hooks can only be called inside component render functions');}return currentComponent;}function setCurrentComponent(component){currentComponent=component;}function resetHookIndex(){hookIndex=0;}function getNextHookIndex(){return hookIndex++;}function useState(initialValue){const component=getCurrentComponent();const index=getNextHookIndex();if(!component.hooks[index]){const state=signal(initialValue);const setState=(newValue)=>{if(typeof newValue==='function'){state.value=newValue(state.value);}else{state.value=newValue;}scheduleComponentUpdate(component);};component.hooks[index]=[state,setState];}const[state,setState]=component.hooks[index];return[()=> state.value,setState];}function useSignal(initialValue){const component=getCurrentComponent();const index=getNextHookIndex();if(!component.hooks[index]){const state=signal(initialValue);effect(()=>{state.value;scheduleComponentUpdate(component);});component.hooks[index]=state;}return component.hooks[index];}function useComputed(fn){const component=getCurrentComponent();const index=getNextHookIndex();if(!component.hooks[index]){const computedValue=computed(fn);effect(()=>{computedValue.value;scheduleComponentUpdate(component);});component.hooks[index]=computedValue;}return component.hooks[index];}function useEffect(fn,deps){const component=getCurrentComponent();const index=getNextHookIndex();if(!component.hooks[index]){component.hooks[index]={deps:[],cleanup: null};}const hook=component.hooks[index];const hasChanged=!deps || !hook.deps || deps.some((dep,i)=> dep !==hook.deps[i]);if(typeof window !=='undefined' && window.DEBUG_HOOKS){console.log('useEffect debug:',{index,deps,hookDeps: hook.deps,hasChanged,depsUndefined: !deps,hookDepsUndefined: !hook.deps,someResult: deps ? deps.some((dep,i)=> dep !==hook.deps[i]): 'deps undefined'});}if(hasChanged){if(hook.cleanup){hook.cleanup();}hook.cleanup=fn();hook.deps=deps ?[...deps]:[];}if(!component.effectCleanups){component.effectCleanups=[];}component.effectCleanups[index]=hook.cleanup;}function useMemo(fn,deps){const component=getCurrentComponent();const index=getNextHookIndex();if(!component.hooks[index]){component.hooks[index]={value: undefined,deps:[]};}const hook=component.hooks[index];const hasChanged=!deps || !hook.deps || deps.some((dep,i)=> dep !==hook.deps[i]);if(hasChanged){hook.value=fn();hook.deps=deps ?[...deps]:[];}return hook.value;}function useCallback(fn,deps){return useMemo(()=> fn,deps);}function useRef(initialValue){const component=getCurrentComponent();const index=getNextHookIndex();if(!component.hooks[index]){component.hooks[index]={current: initialValue};}return component.hooks[index];}function useContext(context){const component=getCurrentComponent();let current=component;while(current){if(current.providedContext===context){return current.contextValue;}current=current.parent;}return context.defaultValue;}function createContext(defaultValue){const context={defaultValue,Provider:(props)=>{const component=getCurrentComponent();component.providedContext=context;component.contextValue=props.value;return props.children;}};return context;}function cleanupComponentEffects(component){if(component.effectCleanups){component.effectCleanups.forEach(cleanup=>{if(cleanup && typeof cleanup==='function'){cleanup();}});component.effectCleanups=[];}}
// === template/enhanced-parser.js ===
class TemplateParser{constructor(){this.componentRegex=/\<(__BERRYACT_PLACEHOLDER_\d+__)([^>]*)\>/g;this.spreadRegex=/\.\.\.\$\{([^}]+)\}/g;this.placeholderRegex=/__BERRYACT_PLACEHOLDER_(\d+)__/g;}parse(strings,values){const template=this.combineTemplate(strings,values);const ast=this.parseTemplate(template,values);return this.transformToVNode(ast,values);}combineTemplate(strings,values){return strings.reduce((acc,str,i)=>{const placeholder=i < values.length ? `__BERRYACT_PLACEHOLDER_${i}__` : '';return acc+str+placeholder;},'');}parseTemplate(template,values){template=this.parseComponents(template,values);template=this.parseFragments(template);template=this.parseSpread(template,values);template=template.replace(/@(\w+)=/g,'data-event-$1=');let doc,templateEl;if(typeof DOMParser !=='undefined'){const parser=new DOMParser();doc=parser.parseFromString(`<template>${template}</template>`,'text/html');templateEl=doc.querySelector('template');}else if(typeof global !=='undefined' && global.document){doc=global.document.implementation.createHTMLDocument();doc.body.innerHTML=`<template>${template}</template>`;templateEl=doc.querySelector('template');}else{const{parseHTML}=require('node-html-parser');const root=parseHTML(`<template>${template}</template>`);templateEl=root.querySelector('template');}if(!templateEl){throw new Error('Invalid template structure');}return this.parseNode(templateEl.content,values);}parseComponents(template,values){return template.replace(this.componentRegex,(match,placeholder,attrs)=>{const placeholderMatch=placeholder.match(/__BERRYACT_PLACEHOLDER_(\d+)__/);if(placeholderMatch){const index=parseInt(placeholderMatch[1]);const component=values[index];if(isFunction(component)){return `<berryact-component data-component-index="${index}"${attrs}>`;}}return match;});}parseFragments(template){return template .replace(/<>/g,'<berryact-fragment>').replace(/<\/>/g,'</berryact-fragment>');}parseSpread(template,values){return template.replace(/<(\w+)([^>]*)\.\.\.\$\{([^}]+)\}([^>]*)>/g,(match,tag,beforeSpread,placeholder,afterSpread)=>{const placeholderMatch=placeholder.match(/__BERRYACT_PLACEHOLDER_(\d+)__/);if(placeholderMatch){const index=parseInt(placeholderMatch[1]);return `<${tag}${beforeSpread}data-spread-index="${index}"${afterSpread}>`;}return match;});}parseNode(node,values){switch(node.nodeType){case Node.TEXT_NODE: return this.parseTextNode(node,values);case Node.ELEMENT_NODE: return this.parseElementNode(node,values);case Node.DOCUMENT_FRAGMENT_NODE: return this.parseFragmentNode(node,values);default: return null;}}parseTextNode(node,values){const text=node.textContent || '';const parts=text.split(this.placeholderRegex);if(parts.length===1){return text.trim()? text : null;}const result=[];for(let i=0;i < parts.length;i++){if(i % 2===0){if(parts[i]){result.push(parts[i]);}}else{const index=parseInt(parts[i]);const value=values[index];if(value !=null){result.push(value);}}}return result.length===1 ? result[0]: result;}parseElementNode(node,values){const tagName=node.tagName.toLowerCase();if(tagName==='berryact-fragment'){const children=this.parseChildren(node,values);return createVNode(Fragment,null,children);}if(tagName==='berryact-component'){const componentIndex=node.getAttribute('data-component-index');if(componentIndex !=null){const component=values[parseInt(componentIndex)];const props=this.parseAttributes(node,values);const children=this.parseChildren(node,values);delete props['data-component-index'];return createVNode(component,props,children);}}if(tagName==='portal' || node.hasAttribute('portal-to')){const to=node.getAttribute('to')|| node.getAttribute('portal-to')|| 'body';const children=this.parseChildren(node,values);return createVNode(Portal,{container: to},children);}const props=this.parseAttributes(node,values);const children=this.parseChildren(node,values);return createVNode(tagName,props,children);}parseFragmentNode(node,values){const children=this.parseChildren(node,values);return children.length===1 ? children[0]: createVNode(Fragment,null,children);}parseAttributes(node,values){const props={};const spreadIndex=node.getAttribute('data-spread-index');if(spreadIndex !=null){const spreadProps=values[parseInt(spreadIndex)];if(spreadProps && typeof spreadProps==='object'){Object.assign(props,spreadProps);}}Array.from(node.attributes).forEach(attr=>{const name=attr.name;let value=attr.value;if(name.startsWith('data-spread-')|| name==='data-component-index'){return;}if(name.startsWith('data-event-')|| name.startsWith('@')|| name.startsWith('on')){let eventName;if(name.startsWith('data-event-')){eventName=name.slice(11).toLowerCase();}else if(name.startsWith('@')){eventName=name.slice(1).toLowerCase();}else{eventName=name.slice(2).toLowerCase();}const placeholderMatch=value.match(this.placeholderRegex);if(placeholderMatch){const fullMatch=placeholderMatch[0];const indexMatch=fullMatch.match(/\d+/);const index=indexMatch ? parseInt(indexMatch[0]):-1;const handler=values[index];if(isFunction(handler)){props[`on${eventName}`]=handler;}}return;}if(name==='ref'){const placeholderMatch=value.match(this.placeholderRegex);if(placeholderMatch){const index=parseInt(placeholderMatch[1]);props.ref=values[index];}return;}if(value.includes('__BERRYACT_PLACEHOLDER_')){const placeholderRegex=/__BERRYACT_PLACEHOLDER_(\d+)__/;const placeholderMatch=placeholderRegex.exec(value);if(placeholderMatch){const index=parseInt(placeholderMatch[1]);const propValue=values[index];const propName=this.normalizeAttributeName(name);props[propName]=propValue;}}else{props[this.normalizeAttributeName(name)]=this.parseAttributeValue(value);}});return props;}parseChildren(node,values){const children=[];node.childNodes.forEach(child=>{const parsed=this.parseNode(child,values);if(parsed !=null){if(isArray(parsed)){children.push(...parsed);}else{children.push(parsed);}}});return normalizeChildren(children);}normalizeAttributeName(name){if(name==='class')return 'class';if(name==='for')return 'for';if(name.startsWith('data-')|| name.startsWith('aria-')){return name;}return name.replace(/-([a-z])/g,(_,char)=> char.toUpperCase());}parseAttributeValue(value){if(value==='' || value==='true')return true;if(value==='false')return false;if(/^\d+$/.test(value))return parseInt(value);if(/^\d*\.\d+$/.test(value))return parseFloat(value);return value;}transformToVNode(parsed,values){if(isArray(parsed)){return parsed.map(p=> this.transformSingleNode(p,values));}return this.transformSingleNode(parsed,values);}transformSingleNode(node,values){if(isPrimitive(node)|| isSignal(node)){return node;}if(node && node.$$typeof){return node;}return node;}}function html(strings,...values){const parser=new TemplateParser();return parser.parse(strings,values);}function component(Component,props,...children){return createVNode(Component,props,children);}function fragment(...children){return createVNode(Fragment,null,children);}function portal(children,to='body'){return createVNode(Portal,{container: to},children);}export{html as htmlLegacy}from './parser.js';
})(typeof window !== 'undefined' ? window : global);
