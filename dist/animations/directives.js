import{registerDirective}from '../template/directives.js';import{isSignal,effect}from '../core/signal.js';import{Animations,transition,animate,spring}from './index.js';registerDirective('animate',(element,value)=>{if(!value)return;const{name,options={},trigger}=typeof value==='string' ?{name: value,options:{},trigger: 'immediate'}: value;const animationFn=Animations[name];if(!animationFn){console.warn(`Animation "${name}" not found`);return;}if(trigger==='immediate'){animationFn(element,options).play();}else if(isSignal(trigger)){effect(()=>{if(trigger.value){animationFn(element,options).play();}});}});registerDirective('transition',(element,value)=>{if(!value)return;const{name,show,mode='in-out'}=typeof value==='string' ?{name: value,show: true,mode: 'in-out'}: value;const trans=transition(name,{mode});let isVisible=element.style.display !=='none';if(isSignal(show)){effect(async()=>{const shouldShow=show.value;if(shouldShow && !isVisible){element.style.display='';await trans.performEnter(element);isVisible=true;}else if(!shouldShow && isVisible){await trans.performLeave(element);element.style.display='none';isVisible=false;}});}});registerDirective('scroll-animate',(element,value)=>{const{animation='fadeIn',threshold=0.1,rootMargin='0px',once=true,...options}=typeof value==='string' ?{animation: value}: value;const animationFn=Animations[animation];if(!animationFn){console.warn(`Animation "${animation}" not found`);return;}element.style.opacity='0';element.style.transform='translateY(20px)';const observer=new IntersectionObserver((entries)=>{entries.forEach(entry=>{if(entry.isIntersecting){element.style.opacity='';element.style.transform='';animationFn(element,options).play();if(once){observer.unobserve(element);}}});},{threshold,rootMargin});observer.observe(element);element._scrollAnimateCleanup=()=>{observer.unobserve(element);};});registerDirective('hover-animate',(element,value)=>{const{enter='scaleIn',leave='scaleOut',...options}=typeof value==='string' ?{enter: value,leave: value}: value;const enterFn=Animations[enter];const leaveFn=Animations[leave];if(!enterFn || !leaveFn){console.warn(`Animation "${enter}" or "${leave}" not found`);return;}let currentAnimation=null;const handleMouseEnter=()=>{if(currentAnimation){currentAnimation.cancel();}currentAnimation=enterFn(element,options);currentAnimation.play();};const handleMouseLeave=()=>{if(currentAnimation){currentAnimation.cancel();}currentAnimation=leaveFn(element,options);currentAnimation.play();};element.addEventListener('mouseenter',handleMouseEnter);element.addEventListener('mouseleave',handleMouseLeave);element._hoverAnimateCleanup=()=>{element.removeEventListener('mouseenter',handleMouseEnter);element.removeEventListener('mouseleave',handleMouseLeave);if(currentAnimation){currentAnimation.cancel();}};});registerDirective('spring',(element,value)=>{if(!isSignal(value)){console.warn('Spring directive requires a signal');return;}let springAnimation=null;effect(()=>{const targetValues=value.value;if(springAnimation){springAnimation.updateTarget(targetValues);}else{springAnimation=spring(element,targetValues);springAnimation.play();}});element._springCleanup=()=>{if(springAnimation){springAnimation.stop();}};});registerDirective('morph',(element,value)=>{if(!isSignal(value))return;const{property='borderRadius',duration=300,easing='ease'}=typeof value.value==='object' ? value.value :{[property]: value.value};effect(()=>{const targetValue=value.value;if(typeof targetValue==='object'){const keyframes=[Object.fromEntries(Object.entries(targetValue).map(([prop,val])=>[prop,getComputedStyle(element)[prop]])),targetValue];animate(element,keyframes,{duration,easing}).play();}else{const currentValue=getComputedStyle(element)[property];const keyframes=[{[property]: currentValue},{[property]: targetValue}];animate(element,keyframes,{duration,easing}).play();}});});registerDirective('parallax',(element,value)=>{const{speed=0.5,direction='vertical',offset=0}=typeof value==='number' ?{speed: value}: value;const updateParallax=()=>{const rect=element.getBoundingClientRect();const windowHeight=window.innerHeight;const scrolled=(windowHeight-rect.top)/(windowHeight+rect.height);let transform;if(direction==='vertical'){const yPos=-(scrolled*speed*100)+offset;transform=`translate3d(0,${yPos}px,0)`;}else{const xPos=-(scrolled*speed*100)+offset;transform=`translate3d(${xPos}px,0,0)`;}element.style.transform=transform;};let ticking=false;const handleScroll=()=>{if(!ticking){requestAnimationFrame(()=>{updateParallax();ticking=false;});ticking=true;}};window.addEventListener('scroll',handleScroll,{passive: true});updateParallax();element._parallaxCleanup=()=>{window.removeEventListener('scroll',handleScroll);};});registerDirective('typewriter',(element,value)=>{if(!isSignal(value))return;const{speed=50,cursor=true,cursorChar='|',startDelay=0}=typeof value.value==='object' ? value.value :{};effect(()=>{const text=typeof value.value==='string' ? value.value : value.value.text;if(!text)return;let currentIndex=0;element.textContent='';if(cursor){element.style.borderRight=`2px solid currentColor`;element.style.animation='berryact-cursor-blink 1s infinite';}const typeCharacter=()=>{if(currentIndex < text.length){element.textContent=text.substring(0,currentIndex+1);currentIndex++;setTimeout(typeCharacter,speed);}else if(cursor){element.style.borderRight='none';element.style.animation='none';}};setTimeout(typeCharacter,startDelay);});});registerDirective('count-up',(element,value)=>{if(!isSignal(value))return;effect(()=>{const{target=value.value,duration=1000,startValue=0,easing='easeOutCubic',formatter=(val)=> Math.round(val).toLocaleString()}=typeof value.value==='object' ? value.value :{target: value.value};const startTime=performance.now();const range=target-startValue;const updateCount=(currentTime)=>{const elapsed=currentTime-startTime;const progress=Math.min(elapsed/duration,1);let easedProgress=progress;if(easing==='easeOutCubic'){easedProgress=1-Math.pow(1-progress,3);}const currentValue=startValue+(range*easedProgress);element.textContent=formatter(currentValue);if(progress < 1){requestAnimationFrame(updateCount);}};requestAnimationFrame(updateCount);});});registerDirective('animate-cleanup',(element)=>{const cleanupFunctions=['_scrollAnimateCleanup','_hoverAnimateCleanup','_springCleanup','_parallaxCleanup'];cleanupFunctions.forEach(cleanupFn=>{if(element[cleanupFn]){element[cleanupFn]();}});});if(typeof document !=='undefined'){const style=document.createElement('style');style.textContent=` @keyframes berryact-cursor-blink{0%,50%{border-color: currentColor;}51%,100%{border-color: transparent;}}`;document.head.appendChild(style);}