module.exports=function babelPluginOptimizeBerryact({types: t}){return{name: 'babel-plugin-optimize-berryact',visitor:{TaggedTemplateExpression(path,state){if(path.node.tag.name==='html'){const quasi=path.node.quasi;if(quasi.expressions.length===0){const id=path.scope.generateUidIdentifier('staticTemplate');const declaration=t.variableDeclaration('const',[t.variableDeclarator(id,path.node)]);const program=path.findParent(p=> p.isProgram());program.node.body.unshift(declaration);path.replaceWith(id);}}},MemberExpression(path){if(path.node.property.name==='value' && path.parent.type !=='AssignmentExpression'){const binding=path.scope.getBinding(path.node.object.name);if(binding && binding.path.isVariableDeclarator()){const init=binding.path.node.init;if(init && init.type==='CallExpression' &&(init.callee.name==='signal' || init.callee.name==='useSignal')){path.replaceWith(t.callExpression(path.node.object,[]));}}}},FunctionDeclaration(path){const node=path.node;if(node.id &&/^[A-Z]/.test(node.id.name)){const displayNameAssignment=t.expressionStatement(t.assignmentExpression('=',t.memberExpression(node.id,t.identifier('displayName')),t.stringLiteral(node.id.name)));path.insertAfter(displayNameAssignment);}},JSXSpreadAttribute(path){const argument=path.node.argument;if(argument.type==='ObjectExpression' && argument.properties.length < 5){const attributes=argument.properties.map(prop=>{if(prop.type==='ObjectProperty' && !prop.computed){return t.jsxAttribute(t.jsxIdentifier(prop.key.name),prop.value.type==='Identifier' ? t.jsxExpressionContainer(prop.value): prop.value);}return null;}).filter(Boolean);path.replaceWithMultiple(attributes);}},ConditionalExpression(path){if(path.parent.type==='JSXExpressionContainer'){const{test,consequent,alternate}=path.node;if(t.isNullLiteral(alternate)||(t.isIdentifier(alternate)&& alternate.name==='undefined')){path.replaceWith(t.logicalExpression('&&',test,consequent));}}}}};};